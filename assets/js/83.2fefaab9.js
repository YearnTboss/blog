(window.webpackJsonp=window.webpackJsonp||[]).push([[83],{241:function(a,t,e){"use strict";e.r(t);var s=e(0),n=Object(s.a)({},function(){var a=this,t=a.$createElement,e=a._self._c||t;return e("div",{staticClass:"content"},[a._m(0),a._v(" "),a._m(1),a._v(" "),a._m(2),a._m(3),a._v(" "),a._m(4),a._v(" "),a._m(5),a._v(" "),a._m(6),a._v(" "),e("p",[a._v("统计一个词在文档中出现了多少次，传统的做法是这样的：")]),a._v(" "),a._m(7),e("p",[a._v("Multiset.addAll(Collection)可以添加Collection中的所有元素并进行计数")]),a._v(" "),a._m(8),a._v(" "),e("p",[a._v("当你想使用多个键做索引的时候，你可能会用类似Map<FirstName, Map<LastName, Person>>的实现，这种方式很丑陋，使用上也不友好。Guava为此提供了新集合类型Table，它有两个支持所有类型的键：”行”和”列”。")]),a._v(" "),e("p",[a._v("Table提供多种视图，以便你从各种角度使用它：")]),a._v(" "),e("ul",[e("li",[a._v("rowMap()：用Map<R, Map<C, V>>表现Table<R, C, V>。同样的， rowKeySet()返回”行”的集合Set"),e("R",[a._v("。")])],1),a._v(" "),e("li",[a._v("row(r) ：用Map<C, V>返回给定”行”的所有列，对这个map进行的写操作也将写入Table中。")]),a._v(" "),e("li",[a._v("类似的列访问方法：columnMap()、columnKeySet()、column(c)。（基于列的访问会比基于的行访问稍微低效点）")]),a._v(" "),e("li",[a._v("cellSet()：用元素类型为Table.Cell<R, C, V>的Set表现Table<R, C, V>。Cell类似于Map.Entry，但它是用行和列两个键区分的。")])]),a._v(" "),e("p",[a._v("Table有如下几种实现：")]),a._v(" "),a._m(9),a._v(" "),a._m(10),a._v(" "),a._m(11),a._v(" "),e("p",[a._v("例如：")]),a._v(" "),a._m(12),e("p",[a._v("这种方式容易出错，而且对于值已经在map中的情况，会变得非常混乱。在BiMap中可以这样：")]),a._v(" "),a._m(13),a._m(14),a._v(" "),e("p",[a._v("ClassToInstanceMap是一种特殊的Map：它的键是类型，而值是符合键所指类型的对象。")]),a._v(" "),e("p",[a._v("为了扩展Map接口，ClassToInstanceMap额外声明了两个方法：T getInstance(Class"),e("T",[a._v(") 和T putInstance(Class"),e("T",[a._v(", T)，从而避免强制类型转换，同时保证了类型安全。")])],1)],1),a._v(" "),e("p",[a._v("ClassToInstanceMap有唯一的泛型参数，通常称为B，代表Map支持的所有类型的上界。例如：")]),a._v(" "),a._m(15),e("p",[a._v("从技术上讲，ClassToInstanceMap"),e("B",[a._v("实现了Map<Class<? extends B>, B>——或者说，是一个映射B的子类型到对应实例的Map。这让ClassToInstanceMap包含的泛型声明有点令人困惑，\n但B始终是Map所支持类型的上界——通常B就是Object。")])],1),a._v(" "),e("p",[a._v("对于ClassToInstanceMap，Guava提供了两种有用的实现：MutableClassToInstanceMap和 ImmutableClassToInstanceMap。")])])},[function(){var a=this.$createElement,t=this._self._c||a;return t("h1",{attrs:{id:"guava-guava使用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#guava-guava使用","aria-hidden":"true"}},[this._v("#")]),this._v(" Guava guava使用")])},function(){var a=this.$createElement,t=this._self._c||a;return t("h2",{attrs:{id:"maven引入"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#maven引入","aria-hidden":"true"}},[this._v("#")]),this._v(" maven引入")])},function(){var a=this.$createElement,t=this._self._c||a;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("<dependency>\n    <groupId>com.google.guava</groupId>\n    <artifactId>guava</artifactId>\n    <version>23.0</version>\n</dependency>\n\n")])])])},function(){var a=this.$createElement,t=this._self._c||a;return t("h2",{attrs:{id:"基本工具-basic-utilities"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#基本工具-basic-utilities","aria-hidden":"true"}},[this._v("#")]),this._v(" 基本工具[Basic utilities]")])},function(){var a=this.$createElement,t=this._self._c||a;return t("h2",{attrs:{id:"集合-collections"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#集合-collections","aria-hidden":"true"}},[this._v("#")]),this._v(" 集合[Collections]")])},function(){var a=this.$createElement,t=this._self._c||a;return t("h3",{attrs:{id:"multimap"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#multimap","aria-hidden":"true"}},[this._v("#")]),this._v(" MultiMap")])},function(){var a=this.$createElement,t=this._self._c||a;return t("h3",{attrs:{id:"multiset"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#multiset","aria-hidden":"true"}},[this._v("#")]),this._v(" MultiSet")])},function(){var a=this.$createElement,t=this._self._c||a;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("Map<String, Integer> counts = new HashMap<String, Integer>();\nfor (String word : words) {\n    Integer count = counts.get(word);\n    if (count == null) {\n        counts.put(word, 1);\n    } else {\n        counts.put(word, count + 1);\n    }\n}\n\n")])])])},function(){var a=this.$createElement,t=this._self._c||a;return t("h3",{attrs:{id:"table"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#table","aria-hidden":"true"}},[this._v("#")]),this._v(" Table")])},function(){var a=this.$createElement,t=this._self._c||a;return t("ul",[t("li",[this._v("HashBasedTable：本质上用HashMap<R, HashMap<C, V>>实现；")]),this._v(" "),t("li",[this._v("TreeBasedTable：本质上用TreeMap<R, TreeMap<C,V>>实现；")]),this._v(" "),t("li",[this._v("ImmutableTable：本质上用ImmutableMap<R, ImmutableMap<C, V>>实现；注：ImmutableTable对稀疏或密集的数据集都有优化。")]),this._v(" "),t("li",[this._v("ArrayTable：要求在构造时就指定行和列的大小，本质上由一个二维数组实现，以提升访问速度和密集Table的内存利用率。ArrayTable与其他Table的工作原理有点不同，请参见Javadoc了解详情。")])])},function(){var a=this.$createElement,t=this._self._c||a;return t("h3",{attrs:{id:"bimap"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#bimap","aria-hidden":"true"}},[this._v("#")]),this._v(" BiMap")])},function(){var a=this.$createElement,t=this._self._c||a;return t("blockquote",[t("p",[this._v("要实现键值对的双向映射需要维护两个单独的map，并保持它们间的同步。")])])},function(){var a=this.$createElement,t=this._self._c||a;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v('Map<String, Integer> nameAndId = Maps.newHashMap();\nMap<Integer, String> idAndName = Maps.newHashMap();\nnameAndId.put("Bob", 42);\nidAndName.put(42, "Bob");\n\n')])])])},function(){var a=this.$createElement,t=this._self._c||a;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("BiMap<String, Integer> userId = HashBiMap.create();\n...\nString userForId = userId.inverse().get(id);\n\n")])])])},function(){var a=this.$createElement,t=this._self._c||a;return t("h3",{attrs:{id:"classtoinstancemap"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#classtoinstancemap","aria-hidden":"true"}},[this._v("#")]),this._v(" ClassToInstanceMap")])},function(){var a=this.$createElement,t=this._self._c||a;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("ClassToInstanceMap<Number> numberDefaults=MutableClassToInstanceMap.create();\nnumberDefaults.putInstance(Integer.class, Integer.valueOf(0));\n\n")])])])}],!1,null,null,null);t.default=n.exports}}]);