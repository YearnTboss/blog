(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{205:function(t,e,s){"use strict";s.r(e);var r=s(0),a=Object(r.a)({},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"content"},[t._m(0),t._v(" "),t._m(1),t._v(" "),t._m(2),t._v(" "),t._m(3),t._v(" "),t._m(4),t._v(" "),t._m(5),t._v(" "),t._m(6),t._v(" "),t._m(7),t._v(" "),s("table",[t._m(8),t._v(" "),s("tbody",[t._m(9),t._v(" "),t._m(10),t._v(" "),s("tr",[s("td",[t._v("客户端(Client)")]),t._v(" "),s("td",[t._v("Docker 客户端通过命令行或者其他工具使用 "),s("a",{attrs:{href:"https://docs.docker.com/reference/api/docker_remote_api",target:"_blank",rel:"noopener noreferrer"}},[t._v("Docker API"),s("OutboundLink")],1),t._v(" 与 Docker 的守护进程通信。")])]),t._v(" "),t._m(11),t._v(" "),s("tr",[s("td",[t._v("仓库(Registry)")]),t._v(" "),s("td",[t._v("Docker 仓库用来保存镜像，可以理解为代码控制中的代码仓库。"),s("a",{attrs:{href:"https://hub.docker.com",target:"_blank",rel:"noopener noreferrer"}},[t._v("Docker Hub"),s("OutboundLink")],1),t._v(" 提供了庞大的镜像集合供使用。")])]),t._v(" "),t._m(12)])]),t._v(" "),t._m(13),t._v(" "),t._m(14),t._v(" "),t._m(15),s("p",[t._v("从 Docker 镜像仓库获取镜像的命令是 docker pull。其命令格式为：")]),t._v(" "),t._m(16),t._m(17),t._v(" "),t._m(18),t._v(" "),t._m(19),t._m(20),t._v(" "),t._m(21),t._m(22),t._m(23),t._v(" "),t._m(24),t._v(" "),t._m(25),s("p",[t._v("查看镜像、容器、数据卷所占用的空间。")]),t._v(" "),t._m(26),t._v(" "),s("p",[t._v("镜像既没有仓库名，也没有标签，均为 "),s("none",[t._v("。查询虚悬镜像：")])],1),t._v(" "),t._m(27),s("blockquote",[s("p",[t._v("新旧镜像同名，旧镜像名称被取消，从而出现仓库名、标签均为 "),s("none",[t._v(" 的镜像。这类无标签镜像也被称为 虚悬镜像(dangling image)")])],1)]),t._v(" "),t._m(28),t._v(" "),s("p",[t._v("查询中间层镜像：")]),t._v(" "),t._m(29),t._m(30),t._v(" "),t._m(31),t._v(" "),t._m(32),t._v(" "),t._m(33),t._m(34),t._v(" "),t._m(35),t._m(36),t._v(" "),s("p",[t._v("定制一个 nginx 服务器为例子")]),t._v(" "),t._m(37),s("p",[t._v("直接访问：http://localhost")]),t._v(" "),s("p",[t._v("修改欢迎内容")]),t._v(" "),t._m(38),s("p",[t._v("进入容器后")]),t._v(" "),t._m(39),t._m(40),t._v(" "),t._m(41),t._v(" "),t._m(42),s("p",[t._v("将容器保存为新镜像")]),t._v(" "),t._m(43),s("p",[t._v("我们可以在 docker image ls 中看到这个新定制的镜像")]),t._v(" "),t._m(44),t._m(45),t._v(" "),t._m(46),t._v(" "),t._m(47),t._v(" "),s("p",[t._v("官方文档参考")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://docs.docker.com/engine/reference/builder/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Dockerfie 官方文档"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://docs.docker.com/develop/develop-images/dockerfile_best-practices/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Dockerfile 最佳实践文档"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://github.com/docker-library/docs",target:"_blank",rel:"noopener noreferrer"}},[t._v("Dockerfie 官方文档"),s("OutboundLink")],1)])]),t._v(" "),s("p",[t._v("在一个空白目录中，建立一个文本文件，并命名为 Dockerfile。")]),t._v(" "),t._m(48),s("p",[t._v("输入：")]),t._v(" "),t._m(49),t._m(50),t._v(" "),t._m(51),t._v(" "),s("p",[t._v("在 Dockerfile 文件所在目录执行：")]),t._v(" "),t._m(52),t._m(53),t._v(" "),t._m(54),t._v(" "),s("p",[t._v("如果在 Dockerfile 中这么写：")]),t._v(" "),t._m(55),t._m(56),t._v(" "),t._m(57),t._v(" "),t._m(58),t._v(" "),t._m(59),t._m(60),t._v(" "),t._m(61),t._v(" "),t._m(62),t._m(63),t._v(" "),t._m(64),t._v(" "),t._m(65),t._v(" "),t._m(66),t._m(67),t._v(" "),t._m(68),t._m(69),t._v(" "),t._m(70),t._v(" "),t._m(71),t._m(72),t._v(" "),t._m(73),t._v(" "),t._m(74),t._v(" "),t._m(75),t._v(" "),t._m(76),t._m(77),t._v(" "),t._m(78),t._m(79),t._v(" "),t._m(80),t._m(81),t._v(" "),t._m(82),t._m(83),t._v(" "),t._m(84),t._m(85),t._v(" "),t._m(86),t._v(" "),t._m(87),t._m(88),t._v(" "),t._m(89),t._m(90),t._m(91),t._v(" "),t._m(92),t._v(" "),s("p",[s("a",{attrs:{href:"https://cloud.docker.com",target:"_blank",rel:"noopener noreferrer"}},[t._v("注册账号"),s("OutboundLink")],1)]),t._v(" "),t._m(93),t._m(94),t._v(" "),t._m(95),t._m(96),t._v(" "),s("ul",[s("li",[t._v("创建并登录 Docker Hub，以及目标网站；")]),t._v(" "),s("li",[t._v("在目标网站中连接帐户到 Docker Hub；")]),t._v(" "),s("li",[t._v("在 Docker Hub 中 "),s("a",{attrs:{href:"https://registry.hub.docker.com/builds/add/",target:"_blank",rel:"noopener noreferrer"}},[t._v("配置一个自动创建"),s("OutboundLink")],1),t._v("；")]),t._v(" "),s("li",[t._v("选取一个目标网站中的项目（需要含 Dockerfile）和分支；")]),t._v(" "),s("li",[t._v("指定 Dockerfile 的位置，并提交创建。")])]),t._v(" "),t._m(97),t._v(" "),s("p",[t._v("安装运行 docker-registry")]),t._v(" "),t._m(98),t._m(99),s("p",[t._v("使用 docker tag 将 nginx:latest 这个镜像标记为 127.0.0.1:5000/nginx:latest")]),t._v(" "),t._m(100),t._m(101)])},[function(){var t=this.$createElement,e=this._self._c||t;return e("h1",{attrs:{id:"虚拟化容器"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#虚拟化容器","aria-hidden":"true"}},[this._v("#")]),this._v(" 虚拟化容器")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"docker-概述"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#docker-概述","aria-hidden":"true"}},[this._v("#")]),this._v(" Docker 概述")])},function(){var t=this.$createElement,e=this._self._c||t;return e("blockquote",[e("ul",[e("li",[this._v("一种服务器，它是一种称为守护进程并且长时间运行的程序。")]),this._v(" "),e("li",[this._v("REST API用于指定程序可以用来与守护进程通信的接口，并指示它做什么。")]),this._v(" "),e("li",[this._v("一个有命令行界面 (CLI) 工具的客户端。")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"系统架构"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#系统架构","aria-hidden":"true"}},[this._v("#")]),this._v(" 系统架构")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ol",[e("li",[this._v("镜像（Image）")]),this._v(" "),e("li",[this._v("容器（Container）")]),this._v(" "),e("li",[this._v("仓库（Repository）")])])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("table",[s("thead",[s("tr",[s("th",[t._v("Docker")]),t._v(" "),s("th",[t._v("面向对象")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("容器")]),t._v(" "),s("td",[t._v("对象")])]),t._v(" "),s("tr",[s("td",[t._v("镜像")]),t._v(" "),s("td",[t._v("类")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("blockquote",[e("p",[this._v("容器与镜像的关系类似于面向对象编程中的对象与类。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"/docker20200109144807.png",alt:"Docker架构",title:"Docker架构"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("thead",[e("tr",[e("th",[this._v("标题")]),this._v(" "),e("th",[this._v("说明")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("tr",[e("td",[this._v("镜像(Images)")]),this._v(" "),e("td",[this._v("Docker 镜像是用于创建 Docker 容器的模板。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("tr",[e("td",[this._v("容器(Container)")]),this._v(" "),e("td",[this._v("容器是独立运行的一个或一组应用。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("tr",[e("td",[this._v("主机(Host)")]),this._v(" "),e("td",[this._v("一个物理或者虚拟的机器用于执行 Docker 守护进程和容器。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("tr",[e("td",[this._v("Docker Machine")]),this._v(" "),e("td",[this._v("Docker Machine是一个简化Docker安装的命令行工具，通过一个简单的命令行即可在相应的平台上安装Docker，比如VirtualBox、 Digital Ocean、Microsoft Azure。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"docker-镜像"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#docker-镜像","aria-hidden":"true"}},[this._v("#")]),this._v(" Docker 镜像")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"获取镜像"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#获取镜像","aria-hidden":"true"}},[this._v("#")]),this._v(" 获取镜像")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-shell script extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("docker pull ubuntu:16.04\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-shell script extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("docker pull [选项] [Docker Registry 地址[:端口号]/]仓库名[:标签]\n\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"tip custom-block"},[e("p",{staticClass:"custom-block-title"},[this._v("帮助文档")]),this._v(" "),e("blockquote",[e("p",[this._v("具体的选项可以通过 docker pull --help 命令查询帮助。")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"交互式运行"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#交互式运行","aria-hidden":"true"}},[this._v("#")]),this._v(" 交互式运行")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-shell script extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("docker run -it --rm \\\n    ubuntu:16.04 \\\n    bash\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"列出镜像"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#列出镜像","aria-hidden":"true"}},[this._v("#")]),this._v(" 列出镜像")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-shell script extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("docker image ls\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-shell script extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("docker images\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h4",{attrs:{id:"镜像体积"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#镜像体积","aria-hidden":"true"}},[this._v("#")]),this._v(" 镜像体积")])},function(){var t=this.$createElement,e=this._self._c||t;return e("blockquote",[e("p",[e("code",[this._v("docker image ls")]),this._v(" 列表中的镜像体积总和并非是所有镜像实际硬盘消耗。由于 Docker 镜像是多层存储结构，并且可以继承、复用，因此不同镜像可能会因为使用相同的基础镜像，从而拥有共同的层")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-shell script extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("docker system df\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"虚悬镜像"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#虚悬镜像","aria-hidden":"true"}},[this._v("#")]),this._v(" 虚悬镜像")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-shell script extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("docker image ls -f dangling=true\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"中间层镜像"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#中间层镜像","aria-hidden":"true"}},[this._v("#")]),this._v(" 中间层镜像")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-shell script extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("docker image ls -a\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("blockquote",[e("p",[this._v("为了加速镜像构建、重复利用资源，Docker 会利用 中间层镜像。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"danger custom-block"},[e("p",{staticClass:"custom-block-title"},[this._v("警告")]),this._v(" "),e("blockquote",[e("p",[this._v("只要删除那些依赖它们的镜像后，这些依赖的中间层镜像也会被连带删除")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"列出部分镜像"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#列出部分镜像","aria-hidden":"true"}},[this._v("#")]),this._v(" 列出部分镜像")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-shell script extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("docker image ls ubuntu\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"删除本地镜像"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#删除本地镜像","aria-hidden":"true"}},[this._v("#")]),this._v(" 删除本地镜像")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-shell script extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("docker image rm [选项] <镜像1> [<镜像2> ...]\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"commit-镜像构成新镜像"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#commit-镜像构成新镜像","aria-hidden":"true"}},[this._v("#")]),this._v(" commit 镜像构成新镜像")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-shell script extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("docker run --name nginx -d -p 80:80 nginx\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-shell script extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("docker exec -it nginx bash\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-shell script extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("echo '<h1>Hello, Docker!</h1>' > /usr/share/nginx/html/index.html\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("然后"),e("code",[this._v("exit")]),this._v("退出容器，再刷新浏览器的话，会发现内容被改变了。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("code",[this._v("docker diff")]),this._v("命令看到具体的改动。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-shell script extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("docker diff nginx\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-shell script extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v('docker commit \\\n    --author "Yuewei tang <472680811@qq.com>" \\\n    --message "修改了默认网页" \\\n    nginx \\\n    nginx:v2\n')])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-shell script extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("docker image ls nginx\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h4",{attrs:{id:"慎用-docker-commit"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#慎用-docker-commit","aria-hidden":"true"}},[this._v("#")]),this._v(" 慎用 docker commit")])},function(){var t=this.$createElement,e=this._self._c||t;return e("blockquote",[e("p",[this._v("使用 docker commit 命令虽然可以比较直观的帮助理解镜像分层存储的概念，但是实际环境中并不会这样使用。推荐使用"),e("code",[this._v("Dockerfile")]),this._v(" 定制镜像")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"dockerfile-定制镜像"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#dockerfile-定制镜像","aria-hidden":"true"}},[this._v("#")]),this._v(" Dockerfile 定制镜像")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-shell script extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("mkdir mynginx\ncd mynginx\ntouch Dockerfile\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-shell script extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("FROM nginx\nRUN echo '<h1>Hello, mynginx!</h1>' > /usr/share/nginx/html/index.html\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("FROM 指定基础镜像")]),this._v(" "),e("li",[this._v("RUN 执行命令")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h4",{attrs:{id:"构建镜像"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#构建镜像","aria-hidden":"true"}},[this._v("#")]),this._v(" 构建镜像")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-shell script extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("docker build -t nginx:v3 .\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"tip custom-block"},[e("p",{staticClass:"custom-block-title"},[this._v("提示")]),this._v(" "),e("div",{staticClass:"language-shell script extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("docker build [选项] <上下文路径/URL/->\n")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h4",{attrs:{id:"镜像构建上下文（context）"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#镜像构建上下文（context）","aria-hidden":"true"}},[this._v("#")]),this._v(" 镜像构建上下文（Context）")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-shell script extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("COPY ./package.json /app/\n")])])])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("blockquote",[s("p",[t._v("这并不是要复制执行"),s("code",[t._v("docker build")]),t._v("命令所在的目录下的"),s("code",[t._v("package.json")]),t._v("，也不是复制 Dockerfile 所在目录下的"),s("code",[t._v("package.json")]),t._v("，而是复制 上下文（context）目录下的"),s("code",[t._v("package.json")]),t._v("。\n一般来说，应该会将 Dockerfile 置于一个空目录下，或者项目根目录下。如果该目录下没有所需文件，那么应该把所需文件复制一份过来")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h4",{attrs:{id:"其它-docker-build-的用法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#其它-docker-build-的用法","aria-hidden":"true"}},[this._v("#")]),this._v(" 其它 docker build 的用法")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("接用 Git repo 进行构建")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-shell script extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("docker build https://github.com/tangyuewei/gitlab-ce-zh.git#:0.1\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("blockquote",[e("p",[this._v("这行命令指定了构建所需的"),e("code",[this._v("Git repo")]),this._v("，并且指定默认的 master 分支，构建目录为 /0.1/，然后 Docker 就会自己去 git clone 这个项目、切换到指定分支、并进入到指定目录后开始构建")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("指定"),e("code",[this._v("tar")]),this._v("压缩包构建")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-shell script extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("docker build http://server/context.tar.gz\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"dockerfile-指令详解"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#dockerfile-指令详解","aria-hidden":"true"}},[this._v("#")]),this._v(" Dockerfile 指令详解")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("COPY 复制文件")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("blockquote",[e("p",[this._v("COPY <源路径>... <目标路径>")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-shell script extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("COPY hom* /mydir/\nCOPY hom?.txt /mydir/\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("ADD 更高级的复制文件")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-shell script extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("ADD package.tar.gz /usr/src/app/\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("blockquote",[e("p",[this._v("如果 <源路径> 为一个 tar 压缩文件的话，压缩格式为 gzip, bzip2 以及 xz 的情况下，ADD 指令将会自动解压缩这个压缩文件到 <目标路径> 去。\n最适合使用 ADD 的场合，就是所提及的需要自动解压缩的场合。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("CMD 容器启动命令")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-shell script extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v('CMD ["nginx", "-g", "daemon off;"]\nCMD [ "sh", "-c", "echo $HOME" ]\n')])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("blockquote",[e("p",[e("code",[this._v("CMD")]),this._v(" 指令的格式和 "),e("code",[this._v("RUN")]),this._v(" 相似")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("ENTRYPOINT 入口点")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("blockquote",[e("p",[this._v("当指定了 ENTRYPOINT 后，CMD 的含义就发生了改变，不再是直接的运行其命令，而是将 CMD 的内容作为参数传给 ENTRYPOINT 指令，换句话说实际执行时，将变为：\n"),e("code",[this._v('<ENTRYPOINT> "<CMD>"')])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("ENV 设置环境变量")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-shell script extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("ENV VERSION=1.0\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("VOLUME 定义匿名卷")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-shell script extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("VOLUME /data\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("EXPOSE 暴露端口")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-shell script extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("EXPOSE <端口1> [<端口2>...]\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("WORKDIR 指定工作目录")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-shell script extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("WORKDIR <工作目录路径>。#如该目录不存在，WORKDIR 会帮你建立目录\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("USER 指定当前用户")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-shell script extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v('USER redis\nRUN [ "redis-server" ]\n')])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"docker-容器"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#docker-容器","aria-hidden":"true"}},[this._v("#")]),this._v(" Docker 容器")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"容器操作"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#容器操作","aria-hidden":"true"}},[this._v("#")]),this._v(" 容器操作")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-shell script extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("docker run nginx #启动\ndocker container start #已经终止的容器启动运行\ndocker container stop #终止一个运行中的容器\ndocker run -d nginx #后台守护启动\ndocker attach 567c #进入运行中的容器 567c为容器id\ndocker exec -it 567c bash #进入运行中的容器 567c为容器id\ndocker container rm  nginx #要删除一个运行中的容器，可以添加 -f 参数\ndocker container prune #清理掉所有处于终止状态的容器\ndocker image prune #清理虚悬镜像\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"导出、导入容器"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#导出、导入容器","aria-hidden":"true"}},[this._v("#")]),this._v(" 导出、导入容器")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-shell script extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v(" docker export 567c > nginx.tar\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-shell script extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v(" cat nginx.tar | docker import - test/nginx:v1.0\n docker import http://example.com/exampleimage.tgz example/imagerepo\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"docker-仓库"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#docker-仓库","aria-hidden":"true"}},[this._v("#")]),this._v(" Docker 仓库")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"docker-hub"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#docker-hub","aria-hidden":"true"}},[this._v("#")]),this._v(" Docker Hub")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-shell script extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("docker login #登录\ndocker logout #退出\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h4",{attrs:{id:"推送镜像"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#推送镜像","aria-hidden":"true"}},[this._v("#")]),this._v(" 推送镜像")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-shell script extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("docker tag ubuntu:16.04 username/ubuntu:16.04 #username 为你的 Docker 账号用户名\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h4",{attrs:{id:"自动创建"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#自动创建","aria-hidden":"true"}},[this._v("#")]),this._v(" 自动创建")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"docker-私有仓库"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#docker-私有仓库","aria-hidden":"true"}},[this._v("#")]),this._v(" Docker 私有仓库")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-shell script extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("docker run -d -p 5000:5000 --restart=always --name registry registry\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-shell script extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("docker run -d \\\n    -p 5000:5000 \\\n    -v /opt/data/registry:/var/lib/registry \\\n    registry\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-shell script extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("docker tag nginx:latest 127.0.0.1:5000/nginx:latest\ndocker push 127.0.0.1:5000/nginx:latest #docker push 上传标记的镜像\ncurl 127.0.0.1:5000/v2/_catalog #用 curl 查看仓库中的镜像\ndocker image rm 127.0.0.1:5000/nginx:latest #先删除已有镜像，再尝试从私有仓库中下载这个镜像\ndocker pull 127.0.0.1:5000/nginx:latest\n\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"warning custom-block"},[e("p",{staticClass:"custom-block-title"},[this._v("注意")]),this._v(" "),e("blockquote",[e("p",[this._v("Docker 默认不允许非 HTTPS 方式推送镜像。我们可以通过 Docker 的配置选项来取消这个限制，或者查看下一节配置能够通过 HTTPS 访问的私有仓库。")])])])}],!1,null,null,null);e.default=a.exports}}]);